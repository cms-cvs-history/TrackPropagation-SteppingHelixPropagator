process PROPAGATORTEST = {

    untracked PSet maxEvents = {untracked int32 input = -1}

    source = PoolSource {
        untracked vstring fileNames = { "file:///somewhere/simevent.root" }
    }
replace PoolSource.fileNames = {
'/store/relval/2008/4/28/RelVal-RelValSingleMuPt10-1209247429-IDEAL_V1-2nd/0001/04660E79-0115-DD11-A59B-001D09F290D8.root',
'/store/relval/2008/4/28/RelVal-RelValSingleMuPt10-1209247429-IDEAL_V1-2nd/0001/5ECCCA2E-0615-DD11-8A55-000423D98800.root',
'/store/relval/2008/4/28/RelVal-RelValSingleMuPt10-1209247429-IDEAL_V1-2nd/0001/D0E48A2F-0615-DD11-89AE-000423D94C68.root'
}

  
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

    include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"
    include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
    include "Geometry/CSCGeometry/data/cscGeometry.cfi"

    include "Geometry/CommonDetUnit/data/bareGlobalTrackingGeometry.cfi"
    include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorAlong.cfi"
    include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorOpposite.cfi"
    include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorAny.cfi"




    module propAna = SteppingHelixPropagatorAnalyzer {
	string NtFile = "PropagatorDump.root"
        int32  trkIndOffset = 0
	bool debug = false
	bool radX0CorrectionMode = false
        bool testPCAPropagation = false
        bool ntupleTkHits = false
	bool startFromPrevHit = false
        string g4SimName = "g4SimHits"
    }

#     replace SteppingHelixPropagatorAny.useEndcapShiftsInZ = true
#     replace SteppingHelixPropagatorAny.endcapShiftInZPos = 300
#     replace SteppingHelixPropagatorAny.endcapShiftInZNeg = 320

#    replace SteppingHelixPropagatorAny.debug = true
#    replace propAna.debug = true
#    service = MessageLogger {
#       untracked vstring destinations = { "cout" }
#       untracked vstring debugModules = { "propAna" }
#       untracked vstring categories = { "SteppingHelixPropagator" }
#
#       untracked PSet cout = {
#         untracked string threshold = "DEBUG"
#         untracked int32 lineLength  = 132
#         untracked bool noLineBreaks = true
#         untracked PSet DEBUG = {untracked int32 limit = 0 }
#         untracked PSet SteppingHelixPropagator = { untracked int32 limit = 10000000}
#       }
#    }


    path p = {propAna}	

}

